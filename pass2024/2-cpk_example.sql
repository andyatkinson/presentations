-- Expects create_tables.sql was run earlier
---
-- Change from Single column PK to CPK
-- Drop single column PK
ALTER TABLE orders DROP CONSTRAINT orders_pkey;

-- Create CPK
ALTER TABLE orders
ADD CONSTRAINT orders_cpk
PRIMARY KEY (supplier_id, id);

-- Alternative:
-- Create CPK from start
CREATE TABLE orders_with_cpk (
  id BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL,
  supplier_id BIGINT NOT NULL,
  customer_id BIGINT NOT NULL,
  quantity INTEGER NOT NULL,
  CONSTRAINT orders_pkey_cpk
    PRIMARY KEY (supplier_id, id)
);


-- Normally we'd share a single sequence across all tenants
-- What if we wanted unique sequences per tenant?
--
-- Create Sequences
CREATE SEQUENCE IF NOT EXISTS supplier_1_seq;
CREATE SEQUENCE IF NOT EXISTS supplier_2_seq;
CREATE SEQUENCE IF NOT EXISTS supplier_3_seq;

CREATE TABLE IF NOT EXISTS orders_with_seq (
  -- id BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL,
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  supplier_id BIGINT NOT NULL,
  customer_id BIGINT NOT NULL,
  quantity INTEGER NOT NULL,
  CONSTRAINT orders_with_seq_pkey_cpk
  PRIMARY KEY (supplier_id, id)
);


-- Could manually specify sequence to use for inserts
-- assuming sequences were created in advance, and matched
-- to suppliers
INSERT INTO orders_with_seq (id, supplier_id, customer_id, quantity)
VALUES (nextval('supplier_1_seq'), 1, 1, 1);

INSERT INTO orders_with_seq (id, supplier_id, customer_id, quantity)
VALUES (nextval('supplier_2_seq'), 2, 1, 1);

INSERT INTO orders_with_seq (id, supplier_id, customer_id, quantity)
VALUES (nextval('supplier_3_seq'), 3, 1, 1);
